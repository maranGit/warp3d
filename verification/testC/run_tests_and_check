#!/bin/bash

#**************************************************************
#*                                                            *
#*      cleanup_files                                         *
#*                                                            *
#**************************************************************

function cleanup_files {
#
/bin/rm -f  *_out out* we* wn* *.text >& /dev/null
/bin/rm -f  *~ >& /dev/null
/bin/rm -f energy  >& /dev/null
/bin/rm -f *_db >& /dev/null
#
}

#**************************************************************
#*                                                            *
#*      run_and_compare                                       *
#*                                                            *
#**************************************************************

function run_and_compare {
#
echo "  ... running testC_1...(alpha w/ material definition)"
"$warp3d_exe" $num_threads  < warp3d_1_alpha_with_material.inp > out_3a
echo "  ... running testC_2...(FGM alphas)"
"$warp3d_exe"  $num_threads < warp3d_2_fgm_alpha.inp > out_3b
#
echo "  ... WARP3D jobs completed..."
#
perl check_3a.perl
perl check_3b.perl
#
cleanup_files
#
}


#**************************************************************
#*                                                            *
#*      main programs                                         *
#*                                                            *
#**************************************************************
#
echo " "; echo " ";
#
machine=`uname`
echo ">> machine id: " $machine
num_threads=$NUM_THREADS
cleanup_files
#
if [ "$MACHINE_TYPE" = '0' ]; then
   echo -e "\n   OSX and Linux verification..."
   warp3d_exe="$WARP3D_EXE"
   run_and_compare
fi
if [ "$MACHINE_TYPE" = '1' ]; then
   echo -e "\n  Windows 32-bit verification..."
   warp3d_exe="$WARP3D_EXE_32"
   run_and_compare
fi
if [ "$MACHINE_TYPE" = '2' ]; then
   echo -e "\n  Windows verification..."
   warp3d_exe="$WARP3D_EXE_64"
   run_and_compare
fi
#
#
exit
