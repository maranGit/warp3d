#!/bin/bash

#**************************************************************
#*                                                            *
#*      cleanup_files                                         *
#*                                                            *
#**************************************************************

function cleanup_files {
#
/bin/rm -f  *_out
/bin/rm -f  *~ >& /dev/null
/bin/rm -f energy  >& /dev/null
/bin/rm -f *_db >& /dev/null
#
}

#**************************************************************
#*                                                            *
#*      run_and_compare                                       *
#*                                                            *
#**************************************************************

function run_and_compare {
#
out="_out"
#
echo "  ... running test 69 series on interface-cohesive model ..."

input="test_69aa"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69ab"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
#
input="test_69ac"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69ad"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
#
input="test_69sa"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69sb"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69ta"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69tb"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69c_initial"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69c_restart"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_compression_a"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_compression_b"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_compression_c"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_PPR_patch_uniaxial"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_PPR_patch_shear"
echo "  ... running $input ..."
"$warp3d_exe" $num_threads  < $input > $input$out
#
input="test_69_PPR_particle"
echo "  ... running $input (a bit longer solution, particle-matrix debonding) ..."
"$warp3d_exe" $num_threads  < $input > $input$out

#
echo "  ... WARP3D jobs completed..."
#
perl check_69aa.perl
perl check_69ab.perl
perl check_69ac.perl
perl check_69ad.perl
perl check_69sa.perl
perl check_69sb.perl
perl check_69ta.perl
perl check_69tb.perl
perl check_69c_restart.perl
perl check_69_compression_a.perl
perl check_69_compression_b.perl
perl check_69_compression_c.perl
perl check_69_PPR_patch_uniaxial.perl
perl check_69_PPR_patch_shear.perl
perl check_69_PPR_particle.perl
#
cleanup_files
#
}


#**************************************************************
#*                                                            *
#*      main programs                                         *
#*                                                            *
#**************************************************************
#
echo " "; echo " ";
#
machine=`uname`
echo ">> machine id: " $machine
num_threads=$NUM_THREADS
cleanup_files
#
if [ "$MACHINE_TYPE" = '0' ]; then
   echo -e "   OSX and Linux verification..."
   warp3d_exe="$WARP3D_EXE"
   run_and_compare
fi
if [ "$MACHINE_TYPE" = '1' ]; then
   echo -e "\n Windows 32-bit verification..."
   warp3d_exe="$WARP3D_EXE_32"
   run_and_compare
fi
if [ "$MACHINE_TYPE" = '2' ]; then
   echo -e "   Windows verification..."
   warp3d_exe="$WARP3D_EXE_64"
   run_and_compare
fi
#
#
echo -e "\n>>> All done with test_69 ...\n\n"
exit
